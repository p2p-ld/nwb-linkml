name: core.nwb.ecephys
annotations:
  is_namespace:
    tag: is_namespace
    value: false
  namespace:
    tag: namespace
    value: core
id: core.nwb.ecephys
version: 2.2.1
imports:
- core.nwb.base
- ../../hdmf_common/v1_1_2/namespace
- core.nwb.device
- core.nwb.language
default_prefix: core.nwb.ecephys/
classes:
  ElectricalSeries:
    name: ElectricalSeries
    description: A time series of acquired voltage data from extracellular recordings.
      The data field is an int or float array storing data in volts. The first dimension
      should always represent time. The second dimension, if present, should represent
      channels.
    is_a: TimeSeries
    attributes:
      name:
        name: name
        range: string
        required: true
      data:
        name: data
        description: Recorded voltage data.
        range: numeric
        required: true
        multivalued: false
        any_of:
        - array:
            dimensions:
            - alias: num_times
        - array:
            dimensions:
            - alias: num_times
            - alias: num_channels
        - array:
            dimensions:
            - alias: num_times
            - alias: num_channels
            - alias: num_samples
      electrodes:
        name: electrodes
        annotations:
          named:
            tag: named
            value: true
          source_type:
            tag: source_type
            value: neurodata_type_inc
        description: DynamicTableRegion pointer to the electrodes that this time series
          was generated from.
        range: DynamicTableRegion
        required: true
        multivalued: false
      channel_conversion:
        name: channel_conversion
        description: Channel-specific conversion factor. Multiply the data in the
          'data' dataset by these values along the channel axis (as indicated by axis
          attribute) AND by the global conversion factor in the 'conversion' attribute
          of 'data' to get the data values in Volts, i.e, data in Volts = data * data.conversion
          * channel_conversion. This approach allows for both global and per-channel
          data conversion factors needed to support the storage of electrical recordings
          as native values generated by data acquisition systems. If this dataset
          is not present, then there is no channel-specific conversion factor, i.e.
          it is 1 for all channels.
        array:
          dimensions:
          - alias: num_channels
        range: float32
        required: false
        multivalued: false
    tree_root: true
  SpikeEventSeries:
    name: SpikeEventSeries
    description: 'Stores snapshots/snippets of recorded spike events (i.e., threshold
      crossings). This may also be raw data, as reported by ephys hardware. If so,
      the TimeSeries::description field should describe how events were detected.
      All SpikeEventSeries should reside in a module (under EventWaveform interface)
      even if the spikes were reported and stored by hardware. All events span the
      same recording channels and store snapshots of equal duration. TimeSeries::data
      array structure: [num events] [num channels] [num samples] (or [num events]
      [num samples] for single electrode).'
    is_a: ElectricalSeries
    attributes:
      name:
        name: name
        range: string
        required: true
      data:
        name: data
        description: Spike waveforms.
        range: numeric
        required: true
        multivalued: false
        any_of:
        - array:
            dimensions:
            - alias: num_events
            - alias: num_samples
        - array:
            dimensions:
            - alias: num_events
            - alias: num_channels
            - alias: num_samples
      timestamps:
        name: timestamps
        description: Timestamps for samples stored in data, in seconds, relative to
          the common experiment master-clock stored in NWBFile.timestamps_reference_time.
          Timestamps are required for the events. Unlike for TimeSeries, timestamps
          are required for SpikeEventSeries and are thus re-specified here.
        array:
          dimensions:
          - alias: num_times
        range: float64
        required: true
        multivalued: false
    tree_root: true
  FeatureExtraction:
    name: FeatureExtraction
    description: Features, such as PC1 and PC2, that are extracted from signals stored
      in a SpikeEventSeries or other source.
    is_a: NWBDataInterface
    attributes:
      name:
        name: name
        ifabsent: string(FeatureExtraction)
        range: string
        required: true
      description:
        name: description
        description: Description of features (eg, ''PC1'') for each of the extracted
          features.
        array:
          dimensions:
          - alias: num_features
        range: text
        required: true
        multivalued: false
      features:
        name: features
        description: Multi-dimensional array of features extracted from each event.
        array:
          dimensions:
          - alias: num_events
          - alias: num_channels
          - alias: num_features
        range: float32
        required: true
        multivalued: false
      times:
        name: times
        description: Times of events that features correspond to (can be a link).
        array:
          dimensions:
          - alias: num_events
        range: float64
        required: true
        multivalued: false
      electrodes:
        name: electrodes
        annotations:
          named:
            tag: named
            value: true
          source_type:
            tag: source_type
            value: neurodata_type_inc
        description: DynamicTableRegion pointer to the electrodes that this time series
          was generated from.
        range: DynamicTableRegion
        required: true
        multivalued: false
    tree_root: true
  EventDetection:
    name: EventDetection
    description: Detected spike events from voltage trace(s).
    is_a: NWBDataInterface
    attributes:
      name:
        name: name
        ifabsent: string(EventDetection)
        range: string
        required: true
      detection_method:
        name: detection_method
        description: Description of how events were detected, such as voltage threshold,
          or dV/dT threshold, as well as relevant values.
        range: text
        required: true
        multivalued: false
      source_idx:
        name: source_idx
        description: Indices (zero-based) into source ElectricalSeries::data array
          corresponding to time of event. ''description'' should define what is meant
          by time of event (e.g., .25 ms before action potential peak, zero-crossing
          time, etc). The index points to each event from the raw data.
        array:
          dimensions:
          - alias: num_events
        range: int32
        required: true
        multivalued: false
      times:
        name: times
        description: Timestamps of events, in seconds.
        array:
          dimensions:
          - alias: num_events
        range: float64
        required: true
        multivalued: false
      source_electricalseries:
        name: source_electricalseries
        annotations:
          source_type:
            tag: source_type
            value: link
        required: true
        multivalued: false
        any_of:
        - range: ElectricalSeries
        - range: string
    tree_root: true
  EventWaveform:
    name: EventWaveform
    description: Represents either the waveforms of detected events, as extracted
      from a raw data trace in /acquisition, or the event waveforms that were stored
      during experiment acquisition.
    is_a: NWBDataInterface
    attributes:
    - name: value
      multivalued: true
      inlined: true
      inlined_as_list: false
      any_of:
      - range: SpikeEventSeries
    tree_root: true
  FilteredEphys:
    name: FilteredEphys
    description: Electrophysiology data from one or more channels that has been subjected
      to filtering. Examples of filtered data include Theta and Gamma (LFP has its
      own interface). FilteredEphys modules publish an ElectricalSeries for each filtered
      channel or set of channels. The name of each ElectricalSeries is arbitrary but
      should be informative. The source of the filtered data, whether this is from
      analysis of another time series or as acquired by hardware, should be noted
      in each's TimeSeries::description field. There is no assumed 1::1 correspondence
      between filtered ephys signals and electrodes, as a single signal can apply
      to many nearby electrodes, and one electrode may have different filtered (e.g.,
      theta and/or gamma) signals represented. Filter properties should be noted in
      the ElectricalSeries.
    is_a: NWBDataInterface
    attributes:
    - name: value
      multivalued: true
      inlined: true
      inlined_as_list: false
      any_of:
      - range: ElectricalSeries
    tree_root: true
  LFP:
    name: LFP
    description: LFP data from one or more channels. The electrode map in each published
      ElectricalSeries will identify which channels are providing LFP data. Filter
      properties should be noted in the ElectricalSeries description or comments field.
    is_a: NWBDataInterface
    attributes:
    - name: value
      multivalued: true
      inlined: true
      inlined_as_list: false
      any_of:
      - range: ElectricalSeries
    tree_root: true
  ElectrodeGroup:
    name: ElectrodeGroup
    description: A physical grouping of electrodes, e.g. a shank of an array.
    is_a: NWBContainer
    attributes:
      name:
        name: name
        range: string
        required: true
      description:
        name: description
        description: Description of this electrode group.
        range: text
        required: true
      location:
        name: location
        description: Location of electrode group. Specify the area, layer, comments
          on estimation of area/layer, etc. Use standard atlas names for anatomical
          regions when possible.
        range: text
        required: true
      position:
        name: position
        description: stereotaxic or common framework coordinates
        range: ElectrodeGroup__position
        required: false
        multivalued: false
      device:
        name: device
        annotations:
          source_type:
            tag: source_type
            value: link
        required: true
        multivalued: false
        any_of:
        - range: Device
        - range: string
    tree_root: true
  ElectrodeGroup__position:
    name: ElectrodeGroup__position
    description: stereotaxic or common framework coordinates
    attributes:
      name:
        name: name
        ifabsent: string(position)
        range: string
        required: true
        equals_string: position
      x:
        name: x
        description: x coordinate
        array:
          exact_number_dimensions: 1
        range: float32
        required: false
        multivalued: false
      y:
        name: y
        description: y coordinate
        array:
          exact_number_dimensions: 1
        range: float32
        required: false
        multivalued: false
      z:
        name: z
        description: z coordinate
        array:
          exact_number_dimensions: 1
        range: float32
        required: false
        multivalued: false
  ClusterWaveforms:
    name: ClusterWaveforms
    description: DEPRECATED The mean waveform shape, including standard deviation,
      of the different clusters. Ideally, the waveform analysis should be performed
      on data that is only high-pass filtered. This is a separate module because it
      is expected to require updating. For example, IMEC probes may require different
      storage requirements to store/display mean waveforms, requiring a new interface
      or an extension of this one.
    is_a: NWBDataInterface
    attributes:
      name:
        name: name
        ifabsent: string(ClusterWaveforms)
        range: string
        required: true
      waveform_filtering:
        name: waveform_filtering
        description: Filtering applied to data before generating mean/sd
        range: text
        required: true
        multivalued: false
      waveform_mean:
        name: waveform_mean
        description: The mean waveform for each cluster, using the same indices for
          each wave as cluster numbers in the associated Clustering module (i.e, cluster
          3 is in array slot [3]). Waveforms corresponding to gaps in cluster sequence
          should be empty (e.g., zero- filled)
        array:
          dimensions:
          - alias: num_clusters
          - alias: num_samples
        range: float32
        required: true
        multivalued: false
      waveform_sd:
        name: waveform_sd
        description: Stdev of waveforms for each cluster, using the same indices as
          in mean
        array:
          dimensions:
          - alias: num_clusters
          - alias: num_samples
        range: float32
        required: true
        multivalued: false
      clustering_interface:
        name: clustering_interface
        annotations:
          source_type:
            tag: source_type
            value: link
        required: true
        multivalued: false
        any_of:
        - range: Clustering
        - range: string
    tree_root: true
  Clustering:
    name: Clustering
    description: DEPRECATED Clustered spike data, whether from automatic clustering
      tools (e.g., klustakwik) or as a result of manual sorting.
    is_a: NWBDataInterface
    attributes:
      name:
        name: name
        ifabsent: string(Clustering)
        range: string
        required: true
      description:
        name: description
        description: Description of clusters or clustering, (e.g. cluster 0 is noise,
          clusters curated using Klusters, etc)
        range: text
        required: true
        multivalued: false
      num:
        name: num
        description: Cluster number of each event
        array:
          dimensions:
          - alias: num_events
        range: int32
        required: true
        multivalued: false
      peak_over_rms:
        name: peak_over_rms
        description: Maximum ratio of waveform peak to RMS on any channel in the cluster
          (provides a basic clustering metric).
        array:
          dimensions:
          - alias: num_clusters
        range: float32
        required: true
        multivalued: false
      times:
        name: times
        description: Times of clustered events, in seconds. This may be a link to
          times field in associated FeatureExtraction module.
        array:
          dimensions:
          - alias: num_events
        range: float64
        required: true
        multivalued: false
    tree_root: true
